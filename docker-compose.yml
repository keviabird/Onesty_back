version: '2.1'

services:

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - user-service
      - file-service
      - message-service
      - search-service

  user-service:
    build: services/user-service
    container_name: user-service
    ports:
      - "8080:8080"
    mem_limit: 256m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mongodb:
        condition: service_healthy

  file-service:
    build: services/file-service
    container_name: file-service
    ports:
      - "8081:8081"
    mem_limit: 256m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      minio:
        condition: service_healthy

  message-service:
    build: services/message-service
    container_name: message-service
    ports:
      - "8082:8082"
    mem_limit: 256m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mongodb:
        condition: service_healthy

  message-paging-service:
    build: services/message-paging-service
    container_name: message-paging-service
    ports:
      - "8083:8083"
    mem_limit: 256m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mongodb:
        condition: service_healthy

  search-service:
    build: services/search-service
    container_name: search-service
    ports:
      - "8084:8084"
    mem_limit: 256m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_healthy

  mongodb:
    image: mongo:7.0.11
    container_name: mongo
    mem_limit: 512m
    ports:
      - "27017:27017"
    command: mongod
    healthcheck:
      test: "mongosh --eval 'db.stats().ok'"
      interval: 5s
      timeout: 2s
      retries: 10

  minio:
    image: minio/minio
    container_name: minio
    mem_limit: 512m
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: [ "CMD", "mc", "ready", "local" ]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.13-management
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - "5672:5672"
      - "15672:15672"

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    container_name: kafka
    restart: "no"
    ports:
      - "29092:29092"
      - "9092:9092"
    volumes:
      - kafka_data:/var/lib/kafka/data
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_NODE_ID: 1
      CLUSTER_ID: oFwURyiqSuaCg-2QfY3mMA
      KAFKA_PROCESS_ROLES: controller,broker
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://0.0.0.0:9092,CONTROLLER://kafka:9093
    healthcheck:
      test: kafka-topics --bootstrap-server localhost:9092 --list
      interval: 10s
      timeout: 5s
      start_period: 30s
      retries: 5

#  kafkaui:
#    image: provectuslabs/kafka-ui:v0.7.2
#    restart: "no"
#    ports:
#      - "8989:8080"
#    environment:
#      DYNAMIC_CONFIG_ENABLED: "true"
#      KAFKA_CLUSTERS_0_NAME: eDHalolOTGubsAXamfcH3A
#      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
#    healthcheck:
#      test: wget --no-verbose --tries=1 --spider http://localhost:8080/actuator/health || exit -1
#      interval: 10s
#      timeout: 5s
#      start_period: 60s
#      retries: 5
#    depends_on:
#      - kafka

volumes:
  minio_data:
  kafka_data: